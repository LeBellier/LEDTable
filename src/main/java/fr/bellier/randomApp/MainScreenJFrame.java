package fr.bellier.randomApp;

import fr.bellier.core.entities.Box;
import fr.bellier.core.gui.MatrixPanel;
import java.util.List;
import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author LeBellier
 */
public class MainScreenJFrame extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form Application
     */
    public MainScreenJFrame(int maxRow, int maxCol, RandomGame game) {
        initComponents();
        initSpecific(maxRow, maxCol, game);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton14 = new javax.swing.JButton();
        contrllerJPanel = new javax.swing.JPanel();
        restartBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nextStepBtn = new javax.swing.JButton();
        completeDisplayPanel = new javax.swing.JPanel();

        jButton14.setText("jButton14");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        restartBtn.setText("Restart");
        restartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartBtnActionPerformed(evt);
            }
        });
        contrllerJPanel.add(restartBtn);

        jLabel1.setText("                                                            ");
        contrllerJPanel.add(jLabel1);

        nextStepBtn.setText("NextStep");
        nextStepBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextStepBtnActionPerformed(evt);
            }
        });
        contrllerJPanel.add(nextStepBtn);

        getContentPane().add(contrllerJPanel, java.awt.BorderLayout.PAGE_START);

        completeDisplayPanel.setMinimumSize(new java.awt.Dimension(202, 200));
        completeDisplayPanel.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(completeDisplayPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartBtnActionPerformed
        myGame.restart();
    }//GEN-LAST:event_restartBtnActionPerformed

    private void nextStepBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextStepBtnActionPerformed
        myGame.nextStep();
    }//GEN-LAST:event_nextStepBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel completeDisplayPanel;
    private javax.swing.JPanel contrllerJPanel;
    private javax.swing.JButton jButton14;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton nextStepBtn;
    private javax.swing.JButton restartBtn;
    // End of variables declaration//GEN-END:variables

    private MatrixPanel matrixPanel;
    private RandomGame myGame;

    public void initSpecific(int maxRow, int maxCol, RandomGame game) {
        myGame = game;
        matrixPanel = new MatrixPanel(maxRow, maxCol);
        completeDisplayPanel.add(matrixPanel);

        pack();
    }

    @Override
    public void update(Observable o, Object o1) {
        List<Box> boxes = (List<Box>) o1;

        for (Box box : boxes) {
            matrixPanel.setColor(box.getIndex(), box.getColor());
        }
    }
}
